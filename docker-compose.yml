version: "3.9"

services:
  fastapi:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastapi
    command: bash -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./backend/:/code
    env_file:
      - .env
    expose:
      - "8000:8000"
    depends_on:
      - postgresql
      - redis
    restart: on-failure

  vue:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: vue
    expose:
      - "3000:3000"
    restart: on-failure

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./backend/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./backend/certbot/www:/var/www/certbot/
#      - ./backend/certbot/conf/:/etc/nginx/ssl/
    depends_on:
      - fastapi
    restart: on-failure

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
        - ./backend/certbot/www/:/var/www/certbot/:rw
        - ./backend/certbot/conf/:/etc/letsencrypt/:rw

  postgresql:
    image: postgres:15
    container_name: postgresql
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_USER: ${PG_USER}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: on-failure

  redis:
    image: redis:7
    command: redis-server --requirepass ${RD_PASSWORD}
    container_name: redis
    env_file:
      - .env
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: on-failure

volumes:
    postgres_data:
    redis_data:
